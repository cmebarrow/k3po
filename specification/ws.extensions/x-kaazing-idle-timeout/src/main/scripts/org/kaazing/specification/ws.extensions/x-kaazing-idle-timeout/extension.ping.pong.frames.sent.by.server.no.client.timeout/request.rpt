property key ${ws:handshakeKey()}
property writeMask ${ws:randomBytes(4)}

connect http://localhost:8001/echo
connected

write method "GET"
write version "HTTP/1.1"
write header host
write header "Upgrade" "websocket"
write header "Connection" "Upgrade"
write header "Sec-WebSocket-Key" ${key}
write header "Sec-WebSocket-Version" "13"
write header "Sec-WebSocket-Extensions" "x-kaazing-idle-timeout,x-kaazing-ping-pong"

read status "101" /.+/
read version "HTTP/1.1"
read header "Upgrade" /(?i:websocket)/
read header "Connection" /(?i:Upgrade)/
read header "Sec-WebSocket-Accept" ${ws:handshakeHash(key)}
read header "Sec-WebSocket-Extensions" "x-kaazing-idle-timeout; timeout=2000"
read header "Sec-WebSocket-Extensions" "x-kaazing-ping-pong; 01010102"

################################################################
# Expect extended PING @ TICK_ONE
read [0x81 0x06 0x01 0x01 0x01 0x02 0x09 0x00]

# Send (masked) extended PONG response (unmasked form is [0x81 0x06 0x01 0x01 0x01 0x02 0x0a 0x00])
write [0x81 0x86] ${writeMask}
write option mask ${writeMask}
write [0x01 0x01 0x01 0x02 0x0a 0x00]
write option mask [0x00 0x00 0x00 0x00]
################################################################
# Expect extended PING @ TICK_TWO
read [0x81 0x06 0x01 0x01 0x01 0x02 0x09 0x00]

# Send (masked) extended PONG response (unmasked form is [0x81 0x06 0x01 0x01 0x01 0x02 0x0a 0x00])
write [0x81 0x86] ${writeMask}
write option mask ${writeMask}
write [0x01 0x01 0x01 0x02 0x0a 0x00]
write option mask [0x00 0x00 0x00 0x00]
################################################################

# Close the ws connection cleanly
write [0x88 0x80] ${writeMask}
read [0x88 0x00]

closed
